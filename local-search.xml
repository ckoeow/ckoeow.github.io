<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/01/11/hello-world/"/>
    <url>/2025/01/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>闲话</title>
    <link href="/2025/01/01/%E9%97%B2%E8%AF%9D/"/>
    <url>/2025/01/01/%E9%97%B2%E8%AF%9D/</url>
    
    <content type="html"><![CDATA[<p>2025年新年快乐！<br>又是新的一年，希望能在这新的一年里不断进步，万事顺遂！</p><p>刚刚结束元旦联欢下午会之后，回到家是空虚的，狂欢之后总是寂静，总是懊悔。不得不说，茉莉花茶确实好喝，也不知道她是怎么选出来生椰茉莉的。说到这个，便想起了我与她的交集了。自3月4日表白同意后，过了也块一年了，经历了很多事情，关系也更进一步，但是现在并不想更进一步了，被路志伟逮到后，我们算是死亡了，我说了一声路志伟来了就走了，等我回过神来她还在原地一动不动，然后路志伟就这么走过来了，我也就这么离开了。叫家长，写检讨，写保证，班会，都干过了，当时被遣返回家的那天正好是吴敬龙念检讨，可惜没去听了。人生果然就是起起落落啊，当时好像刚刚拿下淄博市csp初赛第五吧，然后就输的如此彻底。后来的月考，csp-s2，noip也都考的不理想，当然，这也是后话了。也不知道被抓之前能考班里第四，被抓了之后考不到了这算不算谈恋爱不影响学习。后来吧总感觉自己像是一个罪人，就这么抛弃了一个如此信任自己的人，就这么变得越来越垃圾。我现在真的还有脸去见她吗？我真的能去见她吗？去挑逗，勾引？“以后lch不能踏进我的家门一步！”“我当时哭着求路志伟，让我回去上课”张玉英谁的说得对，我还是太幼稚了，如果褪去成绩的光环，我一无是处，只是一个不愿长大的小孩而已，是弟中之弟罢了，noip考废了之后，我剩下的只有文化课了，我必须把文化课提上去，但是现在好像和她的关系变得近了，这样或许会影响吧，但是我却不清楚如何断掉，就简单的不理她？或许这样太残忍，或许就正常和她说吧，但是这样又怕她不接受。唉，就先这样吧。</p><p>说到这个了，自然也就想到李浩当时在办公室里和我说的话了。证实了于海诺的话，是的，我爸妈是lh的老师，而且他当时还问我我是否原先喜欢过于海诺。自然，肯定是瞒不过去的，也就承认了。笑死了，第二个让我我承认喜欢海姐的，居然是我的班主任。他当时说的话好刺耳，但是却也都是事实。我追海姐，没追上，然后放弃，然后换了个继续追，然后追上了，然后就这样了，影响了两个人，伤害了许多许多人，而这些一切都是因我而起，都是因我而起，都是因我而起，都是因我而起。我是个渣男，是个斯文败类，什么也不是，虽然曾经听过无数次不要贬低自己，但是这确实全都是我的错，我又有什么可狡辩的呢？我这次又准备拿出什么借口来搪塞呢？我的行为就是欺骗别人感情。就是。感觉自己总是一个人，总是留下一些秘密不想让别人知道，很唐的样子，并且总感觉自己更应该一个人。我不应该去找对象也应该被禁止。我不像hyt那样多才多艺，zry那样聪明，nyx那样人缘好又有信服力，这么想来，自己好像纯纯是关系户，是自己最鄙视的那种人。现在知道这个事情的我身边的同学只有fyr和yhn。“如果要我选的话，我宁愿你选择yhn，就光拼搏精神而言两者高下立判。”“人家于海诺中体嘉年华还第二来，怎么没见到你的名字啊？”“能不能和人家断干净？”这么一看自己简直是傻逼，不对，就是傻逼。我不想面对这一切，但同时又不想成为btx的样子。一边期望这能够成为那个样子从而可以休息休息，不再想这么多，一边又想着自己必须避免那个样子，想着自己要是那个样子，会给父母增加很多麻烦，而且证明了自己心理脆弱，于是总是强迫自己去坚强，去勇敢，去变得成熟，然后失败。突然想到昨天晚上又梦到她了，不过，这次梦到的是被逮到，然后被批评，然后从此再也没人信任我亲近我了。然后就“忽魂悸以魄动 恍惊起而长嗟”了，如此噩梦再也不想再做第二次了，比原先做过的关于学府的噩梦和在草原悬崖上的梦恐怖多了。</p><p>必须断干净。</p>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>闲话</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P5304题解</title>
    <link href="/2024/11/29/P5304%E9%A2%98%E8%A7%A3/"/>
    <url>/2024/11/29/P5304%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="P5304-GXOI-GZOI2019-旅行者-题解"><a href="#P5304-GXOI-GZOI2019-旅行者-题解" class="headerlink" title="P5304 [GXOI&#x2F;GZOI2019] 旅行者 题解"></a>P5304 [GXOI&#x2F;GZOI2019] 旅行者 题解</h1><p><a href="https://www.luogu.com.cn/problem/P5304">题目传送门</a></p><p>复述一下题意：给定n个点m条边的有向图，边有边权，给定k个特殊点，求k个点两两之间最短路的最小值。</p><p>题意挺好理解，第一想法自然是想暴力。对每个特殊点求单源最短路，然后取max即可，复杂度$O(n^2logn)$自然不足以通过本题。于是想其他思路。</p><p>想到求k个特殊点和其他点之间的最短路的最小值可以建超级源点做单源最短路在$O(nlogn)$内求解，于是考虑将这k个点分成两组，这两组之间的不同点两两最短路最小值即可求解。</p><p>接下来考虑如何分组，按照二进制分组自然可以，还有一种分组方式可以随机化分组（别看随机化听起来像乱搞，但是却挺有用的还）。每次随机找特殊点中的一部分和超级源点连边并求最短路最小值，多跑几遍随机的正确性就上去了。复杂度$O(knlogn)$（k为随机化的常数）。</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-keyword">typedef</span> pair&lt;ll, ll&gt; pll;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">double</span> dd;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IOS cin.tie(nullptr), cout.tie(nullptr)-&gt;sync_with_stdio(false)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> rep(i, a, b) for (int i = (a); i &lt;= (b); i ++)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> per(i, a, b) for (int i = (a); i &gt;= (b); i --)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> mset(x, v) memset(x, v, sizeof x)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> pb push_back</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> endl <span class="hljs-string">&#x27;\n&#x27;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> fi first</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> se second</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> rd read<span class="hljs-string">&lt;ll&gt;</span>()</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> RAND() mt19937 Rand(time(0))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> gr(l, r) (Rand() % (r - l + 1) + l)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SZ(x) ((ll)x.size())</span><br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt; <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Max</span><span class="hljs-params">(T &amp;x, T y)</span> </span>&#123; <span class="hljs-keyword">if</span> (y &gt; x) x = y; &#125;<br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt; <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Min</span><span class="hljs-params">(T &amp;x, T y)</span> </span>&#123; <span class="hljs-keyword">if</span> (y &lt; x) x = y; &#125;<br><br><span class="hljs-keyword">namespace</span> FastIO<br>&#123;<br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt; <span class="hljs-function">T <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">bool</span> fl = <span class="hljs-number">0</span>; T x = <span class="hljs-number">0</span>; <span class="hljs-type">char</span> ch = <span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">for</span> (; ch &lt; <span class="hljs-string">&#x27;0&#x27;</span> || ch &gt; <span class="hljs-string">&#x27;9&#x27;</span>; ch = <span class="hljs-built_in">getchar</span>()) <span class="hljs-keyword">if</span> (ch == <span class="hljs-string">&#x27;-&#x27;</span>) fl = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span> (; ch &gt;= <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="hljs-string">&#x27;9&#x27;</span>; ch = <span class="hljs-built_in">getchar</span>()) x = x * <span class="hljs-number">10</span> + ch - <span class="hljs-string">&#x27;0&#x27;</span>;<br><span class="hljs-keyword">return</span> fl ? -x : x;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt; <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">write</span><span class="hljs-params">(T x)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (x &lt; <span class="hljs-number">0</span>) <span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;-&#x27;</span>), x = -x;<br><span class="hljs-keyword">if</span> (x &gt; <span class="hljs-number">9</span>) <span class="hljs-built_in">write</span>(x / <span class="hljs-number">10</span>);<br><span class="hljs-built_in">putchar</span>(x % <span class="hljs-number">10</span> + <span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt; <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">writecs</span><span class="hljs-params">(T x)</span> </span>&#123; <span class="hljs-built_in">write</span>(x); <span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27; &#x27;</span>); &#125;<br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt; <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">writeln</span><span class="hljs-params">(T x)</span> </span>&#123; <span class="hljs-built_in">write</span>(x); <span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;\n&#x27;</span>); &#125;<br>&#125;<br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> FastIO;<br><br><span class="hljs-comment">/*-----------------------main-----------------------*/</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> INF ((ll)1e18)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> N 100005</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> M 500005</span><br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span> &#123; ll to, nxt, cost; &#125; e[M], ee[M];<br>ll head[N], tot, hd[N], tt;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">adde</span><span class="hljs-params">(ll u, ll v, ll w = <span class="hljs-number">0</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>e[++tot] = &#123;v, head[u], w&#125;;<br>head[u] = tot;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ADD</span><span class="hljs-params">(ll u, ll v, ll w = <span class="hljs-number">0</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>ee[++tt] = &#123;v, hd[u], w&#125;;<br>hd[u] = tt;<br>&#125;<br><br>ll n, m, k;<br>ll a[N], dis[N];<br><span class="hljs-type">bool</span> vis[N], In[N];<br>vector&lt;ll&gt; s;<br>priority_queue&lt;pll&gt; q;<br><br><span class="hljs-function">ll <span class="hljs-title">dijk</span><span class="hljs-params">(ll st)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">mset</span>(vis, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">rep</span>(i, <span class="hljs-number">1</span>, n) dis[i] = INF;<br><span class="hljs-keyword">while</span> (!q.<span class="hljs-built_in">empty</span>()) q.<span class="hljs-built_in">pop</span>();<br>q.<span class="hljs-built_in">push</span>(&#123;<span class="hljs-number">0</span>, st&#125;);<br>vis[st] = <span class="hljs-number">1</span>;<br>dis[st] = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br>ll u = q.<span class="hljs-built_in">top</span>().se;<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">for</span> (ll i = head[u]; ~i; i = e[i].nxt)<br>&#123;<br>ll v = e[i].to, w = e[i].cost;<br><span class="hljs-keyword">if</span> (dis[v] &gt; dis[u] + w)<br>&#123;<br>dis[v] = dis[u] + w;<br><span class="hljs-keyword">if</span> (!vis[v]) q.<span class="hljs-built_in">push</span>(&#123;-dis[v], v&#125;);<br>&#125;<br>&#125;<br>&#125;<br>ll tmp = INF;<br><span class="hljs-built_in">rep</span>(i, <span class="hljs-number">1</span>, k)<br>&#123;<br>ll v = a[i];<br><span class="hljs-keyword">if</span> (!In[v] &amp;&amp; dis[v] &lt; tmp) tmp = dis[v];<br>&#125;<br><span class="hljs-keyword">return</span> tmp;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solv</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">RAND</span>();<br><span class="hljs-built_in">mset</span>(hd, <span class="hljs-number">-1</span>);<br>tt = <span class="hljs-number">0</span>;<br>n = rd, m = rd, k = rd;<br><span class="hljs-built_in">rep</span>(i, <span class="hljs-number">1</span>, m)<br>&#123;<br>ll a = rd, b = rd, c = rd;<br><span class="hljs-built_in">ADD</span>(a, b, c);<br>&#125;<br><span class="hljs-built_in">rep</span>(i, <span class="hljs-number">1</span>, k) a[i] = rd;<br>ll ans = INF;<br><span class="hljs-built_in">rep</span>(_, <span class="hljs-number">1</span>, <span class="hljs-number">15</span>)<br>&#123;<br>s.<span class="hljs-built_in">clear</span>();<br><span class="hljs-built_in">rep</span>(i, <span class="hljs-number">0</span>, n) head[i] = hd[i];<br>tot = tt;<br><span class="hljs-built_in">rep</span>(i, <span class="hljs-number">0</span>, tt) e[i] = ee[i];<br><span class="hljs-built_in">rep</span>(i, <span class="hljs-number">0</span>, n) In[i] = <span class="hljs-number">0</span>;<br><span class="hljs-built_in">rep</span>(j, <span class="hljs-number">1</span>, k)<br>&#123;<br>ll i = a[j];<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">Rand</span>() % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) &#123; In[i] = <span class="hljs-number">1</span>; s.<span class="hljs-built_in">pb</span>(i); <span class="hljs-built_in">adde</span>(<span class="hljs-number">0</span>, i, <span class="hljs-number">0</span>); &#125;<br>&#125;<br><span class="hljs-built_in">Min</span>(ans, <span class="hljs-built_in">dijk</span>(<span class="hljs-number">0</span>));<br>&#125;<br><span class="hljs-built_in">writeln</span>(ans);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> TC = rd;<br><span class="hljs-keyword">while</span> (TC --) <span class="hljs-built_in">solv</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2021/06/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2021/06/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章</p><p><img src="/test.png" alt="图片引用方法二"></p><p><img src="/images/test.png" alt="图片引用方法三"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
